<!-- *********************************************************************** -->
<!-- ** PROJECT:   caArray                                                ** -->
<!-- *********************************************************************** -->

<project name="caarray" default="build" basedir="..">

    <!-- ******************************************************************* -->
    <!-- ** PROPERTIES                                                    ** -->
    <!-- ******************************************************************* -->

    <!-- Main -->

    <property name="build.dir" value="${basedir}/build" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="resource.dir" value="${build.dir}/resources" />
    <property name="target.dir" value="${build.dir}/target" />
    <property name="site.dir" value="${build.dir}/site" />

    <!-- Components -->

    <property name="caarray-common.dir" value="${basedir}/caarray-common.jar" />
    <property name="caarray-common.src.dir" value="${caarray-common.dir}/src/main/java" />
    <property name="caarray-common.resources.dir" value="${caarray-common.dir}/src/main/resources" />
    <property name="caarray-common.test.src.dir" value="${caarray-common.dir}/src/test/java" />
    <property name="caarray-common.test.files.dir" value="${caarray-common.dir}/src/test/resources" />
    <property name="caarray-common.target.dir" value="${caarray-common.dir}/target" />
    <property name="caarray-common.classes.dir" value="${caarray-common.target.dir}/classes" />
    <property name="caarray-common.instrumented.classes.dir" value="${caarray-common.target.dir}/instrumented-classes" />
    <property name="caarray-common.test.classes.dir" value="${caarray-common.target.dir}/test-classes" />
    <property name="caarray-common.jar" value="${caarray-common.target.dir}/caarray-common.jar" />

    <property name="caarray-ejb.dir" value="${basedir}/caarray-ejb.jar" />
    <property name="caarray-ejb.src.dir" value="${caarray-ejb.dir}/src/main/java" />
    <property name="caarray-ejb.resources.dir" value="${caarray-ejb.dir}/src/main/resources" />
    <property name="caarray-ejb.test.src.dir" value="${caarray-ejb.dir}/src/test/java" />
    <property name="caarray-ejb.target.dir" value="${caarray-ejb.dir}/target" />
    <property name="caarray-ejb.classes.dir" value="${caarray-ejb.target.dir}/classes" />
    <property name="caarray-ejb.instrumented.classes.dir" value="${caarray-ejb.target.dir}/instrumented-classes" />
    <property name="caarray-ejb.test.classes.dir" value="${caarray-ejb.target.dir}/test-classes" />
    <property name="caarray-ejb.test.resources.dir" value="${caarray-ejb.dir}/src/test/resources" />
    <property name="caarray-ejb.jar" value="${caarray-ejb.target.dir}/caarray-ejb.jar" />

    <property name="caarray-war.dir" value="${basedir}/caarray.war" />
    <property name="caarray-war.src.dir" value="${caarray-war.dir}/src/main/java" />
    <property name="caarray-war.webapp.dir" value="${caarray-war.dir}/src/main/webapp" />
    <property name="caarray-war.test.src.dir" value="${caarray-war.dir}/src/test/java" />
    <property name="caarray-war.target.dir" value="${caarray-war.dir}/target" />
    <property name="caarray-war.classes.dir" value="${caarray-war.target.dir}/classes" />
    <property name="caarray-war.instrumented.classes.dir" value="${caarray-war.target.dir}/instrumented-classes" />
    <property name="caarray-war.test.classes.dir" value="${caarray-war.target.dir}/test-classes" />
    <property name="caarray.war" value="${caarray-war.target.dir}/caarray.war" />

    <property name="caarray-ear.dir" value="${basedir}/caarray.ear" />
    <property name="caarray-ear.resources.dir" value="${caarray-ear.dir}/src/main/resources" />
    <property name="caarray-ear.target.dir" value="${caarray-ear.dir}/target" />
    <property name="caarray.ear" value="${caarray-ear.target.dir}/caarray.ear" />
    <property name="caarray-client.jar" value="${caarray-ear.target.dir}/caarray-client.jar" />

    <!-- Third-party -->
    <property name="affxfusion.jar" value="${lib.dir}/AffxFusion.jar" />
    <property name="antlr.jar" value="${lib.dir}/antlr-2.7.6.jar" />
    <property name="asm.jar" value="${lib.dir}/asm.jar" />
    <property name="asm-2.2.1.jar" value="${lib.dir}/asm-2.2.1.jar" />
    <property name="asm-3.0.jar" value="${lib.dir}/asm-3.0.jar" />
    <property name="asm-attrs.jar" value="${lib.dir}/asm-attrs.jar" />
    <property name="backport-util-concurrent" value="${lib.dir}/backport-util-concurrent" />
    <property name="c3p0.jar" value="${lib.dir}/c3p0-0.9.0.jar" />
    <property name="cacore32-client.jar" value="${lib.dir}/cacore32-client.jar" />
    <property name="cglib.jar" value="${lib.dir}/cglib-2.1.3.jar" />
    <property name="checkstyle.jar" value="${lib.dir}/checkstyle-all-4.3.jar" />
    <property name="cobertura.jar" value="${lib.dir}/cobertura.jar" />
    <property name="commons-collections.jar" value="${lib.dir}/commons-collections-3.2.jar" />
    <property name="commons-io.jar" value="${lib.dir}/commons-io-1.3.2.jar" />
    <property name="commons-lang.jar" value="${lib.dir}/commons-lang-2.3.jar" />
    <property name="commons-logging.jar" value="${lib.dir}/commons-logging-1.1.jar" />
    <property name="dom4j.jar" value="${lib.dir}/dom4j-1.6.1.jar" />
    <property name="hibernate.jar" value="${lib.dir}/hibernate3.jar" />
    <property name="jakarta-oro-2.0.8.jar" value="${lib.dir}/jakarta-oro-2.0.8.jar" />
    <property name="javaee.jar" value="${lib.dir}/javaee.jar" />
    <property name="jaxen.jar" value="${lib.dir}/jaxen-1.1-beta.jar" />
    <property name="jta.jar" value="${lib.dir}/jta.jar" />
    <property name="junit.jar" value="${lib.dir}/junit-4.3.1.jar" />
    <property name="log4j.jar" value="${lib.dir}/log4j-1.2.13.jar" />
    <property name="myfaces-api.jar" value="${lib.dir}/myfaces-api-1.1.5.jar" />
    <property name="mysql-connector.jar" value="${lib.dir}/mysql-connector-java-5.0.5-bin.jar" />
    <property name="ojdbc.jar" value="${lib.dir}/ojdbc14.jar" />
    <property name="pmd.jar" value="${lib.dir}/pmd-3.9.jar" />
    <property name="selenium-server.jar" value="${lib.dir}/selenium-server.jar" />
    <property name="selenium-java-client-driver.jar" value="${lib.dir}/selenium-java-client-driver.jar" />
    <property name="selenium-java-client-driver-tests.jar" value="${lib.dir}/selenium-java-client-driver-tests.jar" />
    <property name="spring.jar" value="${lib.dir}/spring.jar" />
    <property name="netcdf.jar" value="${lib.dir}/nc2.2.jar" />
    <property name="javacsv.jar" value="${lib.dir}/javacsv.jar" />

    <!-- Test-related properties -->
    <property name="test.dir" value="${basedir}/test" />
    <property name="test.target.dir" value="${test.dir}/target" />
    <property name="test.src.dir" value="${test.dir}/src/test/java" />
    <property name="test.data.dir" value="${test.dir}/src/test/data" />
    <property name="test.classes.dir" value="${test.target.dir}/test-classes" />

    <path id="cobertura.classpath">
        <fileset dir="${lib.dir}">
            <include name="cobertura.jar" />
            <include name="asm-2.2.1.jar" />
            <include name="jakarta-oro-2.0.8.jar" />
            <include name="log4j-1.2.13.jar" />
        </fileset>
    </path>

    <!-- Datasource-configuration-related properties -->
    <property name="jta.transaction.factory" value="hibernate.transaction.factory_class org.hibernate.transaction.JTATransactionFactory" />
    <property name="jta.transaction.manager" value="hibernate.transaction.manager_lookup_class org.hibernate.transaction.JBossTransactionManagerLookup" />
    <property name="datasource.connection.provider" value="hibernate.connection.provider_class org.hibernate.connection.DatasourceConnectionProvider" />
    <property name="jdbc.transaction.factory" value="hibernate.transaction.factory_class org.hibernate.transaction.JDBCTransactionFactory" />
    <property name="hibernate.session.context" value="hibernate.current_session_context_class thread" />
    <property name="hibernate.connection.provider" value="hibernate.connection.provider_class org.hibernate.connection.C3P0ConnectionProvider" />
    <property name="comment.start" value="&lt;!-- " />
    <property name="comment.end" value=" -->" />
    <!-- Configuration files -->
    <property name="checkstyle.config" value="${resource.dir}/caarray_checks.xml" />

    <!-- Environment properties -->
    <property environment="env" />
    <property file="${build.dir}/local.properties" />
    <property file="${build.dir}/default.properties" />
    <property name="jboss.deploy.dir" value="${jboss.home}/server/${jboss.server.name}/deploy" />

    <filterset id="caarray.filterset">
        <filtersfile file="${build.dir}/local.properties" />
        <filtersfile file="${build.dir}/default.properties" />
    </filterset>

    <!-- ******************************************************************* -->
    <!-- ** IMPORTS                                                       ** -->
    <!-- ******************************************************************* -->

    <import file="macrodefs.xml" />


    <!-- ******************************************************************* -->
    <!-- ** TASKDEFS                                                      ** -->
    <!-- ******************************************************************* -->

    <taskdef resource="checkstyletask.properties" classpath="${checkstyle.jar}" />

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <taskdef name="pmd"
        classname="net.sourceforge.pmd.ant.PMDTask"
        classpath="${pmd.jar};${jaxen.jar};${asm.jar};${backport-util-concurrent}" />

    <taskdef name="for" classname="net.sf.antcontrib.logic.ForTask">
        <classpath>
            <fileset dir="${lib.dir}" />
        </classpath>
    </taskdef>

    <!-- ******************************************************************* -->
    <!-- ** MAIN TARGETS                                                  ** -->
    <!-- ******************************************************************* -->

    <target name="continuous-integration" depends="clean,
      build,
      check,
      test:unit" />

    <target name="nightly-build" depends="continuous-integration,
        deploy:start-jboss,
      deploy:deploy-and-wait,
        test:functional,
        deploy:stop-jboss,
        test:check-functional-test-results" />

    <!-- ******************************************************************* -->
    <!-- ** CLEAN TARGETS                                                 ** -->
    <!-- ******************************************************************* -->

    <target name="clean" depends="clean:caarray-common.jar,
        clean:caarray-ejb.jar,
        clean:caarray.war,
        clean:caarray.ear,
        clean:site.dir,
        clean:test.classes.dir,
        clean:target.dir" />

    <target name="clean:caarray-common.jar">
        <delete dir="${caarray-common.target.dir}" />
    </target>

    <target name="clean:caarray-ejb.jar">
        <delete dir="${caarray-ejb.target.dir}" />
    </target>

    <target name="clean:caarray.war">
        <delete dir="${caarray-war.target.dir}" />
    </target>

    <target name="clean:caarray.ear">
        <delete dir="${caarray-ear.target.dir}" />
    </target>

    <target name="clean:test.classes.dir">
        <delete dir="${test.classes.dir}}" />
    </target>

    <target name="clean:site.dir">
        <delete dir="${site.dir}" />
    </target>

    <target name="clean:target.dir">
        <delete dir="${target.dir}" />
    </target>


    <!-- ******************************************************************* -->
    <!-- ** PREPARATION TARGETS                                           ** -->
    <!-- ******************************************************************* -->

    <target name="prepare:create-local.properties"
      unless="local.properties.exists"
      depends="prepare:check-for-local.properties">
        <touch file="${build.dir}/local.properties" />
    </target>

    <target name="prepare:check-for-local.properties">
        <available file="${build.dir}/local.properties" property="local.properties.exists" />
    </target>

    <!-- ******************************************************************* -->
    <!-- ** DATASOURCE CONFIGURATION TARGETS                              ** -->
    <!-- ******************************************************************* -->

    <!-- Copy hibernate files to classes directory and configure datasource and transaction management -->
    <target name="configure-datasource-for-deploy">
        <copy todir="${caarray-common.classes.dir}" overwrite="true">
            <fileset dir="${caarray-common.resources.dir}" includes="hibernate*" />
            <fileset dir="${caarray-common.resources.dir}" includes="**/*.hbm.xml" />
        </copy>
        <replace file="${caarray-common.classes.dir}/hibernate.cfg.xml">
            <replacefilter token="@DATASOURCE_CONFIG_START@" value="${comment.end}" />
            <replacefilter token="@DATASOURCE_CONFIG_END@" value="${comment.start}" />
        </replace>
        <replace file="${caarray-common.classes.dir}/hibernate.properties">
            <replacefilter token="#@TRANSACTION_FACTORY@" value="${jta.transaction.factory}" />
            <replacefilter token="#@TRANSACTION_MANAGER@" value="${jta.transaction.manager}" />
            <replacefilter token="#@CONNECTION_PROVIDER@" value="${datasource.connection.provider}" />
        </replace>
    </target>

    <target name="configure-datasource-for-test">
        <copy todir="${caarray-common.test.classes.dir}" overwrite="true">
            <fileset dir="${caarray-common.resources.dir}" includes="hibernate*" />
            <fileset dir="${caarray-common.resources.dir}" includes="**/*.hbm.xml" />
        </copy>
        <replace file="${caarray-common.test.classes.dir}/hibernate.cfg.xml">
            <replacefilter token="@HIBERNATE_CONFIG_START@" value="${comment.end}" />
            <replacefilter token="@HIBERNATE_CONFIG_END@" value="${comment.start}" />
            <replacefilter token="@SERVERNAME@" value="${database.server}" />
            <replacefilter token="@DBNAME@" value="${database.name}" />
            <replacefilter token="@DBUSER@" value="${database.user}" />
            <replacefilter token="@DBPASSWD@" value="${database.password}" />
        </replace>
        <replace file="${caarray-common.test.classes.dir}/hibernate.properties">
            <replacefilter token="#@TRANSACTION_FACTORY@" value="${jdbc.transaction.factory}" />
            <replacefilter token="#@SESSION_CONTEXT@" value="${hibernate.session.context}" />
            <replacefilter token="#@CONNECTION_PROVIDER@" value="${hibernate.connection.provider}" />
        </replace>
    </target>

    <!-- ******************************************************************* -->
    <!-- ** COMPILE TARGETS                                               ** -->
    <!-- ******************************************************************* -->

    <target name="compile" depends="compile:caarray-common.jar,
        compile:caarray-ejb.jar,
        compile:caarray.war" />

    <target name="compile:caarray-common.jar">
        <mkdir dir="${caarray-common.classes.dir}" />
        <javac srcdir="${caarray-common.src.dir}" destdir="${caarray-common.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${hibernate.jar}" />
        <pathelement location="${commons-collections.jar}" />
        <pathelement location="${commons-io.jar}" />
                <pathelement location="${commons-lang.jar}" />
                <pathelement location="${javacsv.jar}" />
                <pathelement location="${commons-logging.jar}" />
            <pathelement location="${netcdf.jar}" />
        <pathelement location="${caarray-common.resources.dir}" />
        <pathelement location="${caarray-common.test.files.dir}" />
            </classpath>
        </javac>
    </target>

    <target name="compile:caarray-ejb.jar" depends="compile:caarray-common.jar">
        <mkdir dir="${caarray-ejb.classes.dir}" />
        <javac srcdir="${caarray-ejb.src.dir}" destdir="${caarray-ejb.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${caarray-common.classes.dir}" />
			    <pathelement location="${commons-lang.jar}" />
			    <pathelement location="${commons-io.jar}" />
                <pathelement location="${cacore32-client.jar}" />
                <pathelement location="${javaee.jar}" />
                <pathelement location="${affxfusion.jar}" />
                <pathelement location="${netcdf.jar}" />
            </classpath>
        </javac>
    </target>

    <target name="compile:caarray.war" depends="compile:caarray-common.jar,compile:caarray-ejb.jar">
        <mkdir dir="${caarray-war.classes.dir}" />
        <javac srcdir="${caarray-war.src.dir}" destdir="${caarray-war.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${caarray-common.classes.dir}" />
                <pathelement location="${caarray-ejb.classes.dir}" />
                <pathelement location="${javaee.jar}" />
                <pathelement location="${commons-lang.jar}" />
                <pathelement location="${commons-logging.jar}" />
                <pathelement location="${myfaces-api.jar}" />
            </classpath>
        </javac>
    </target>

    <!-- ******************************************************************* -->
    <!-- ** BUILD TARGETS                                                 ** -->
    <!-- ******************************************************************* -->

        <target name="build" depends="validate-properties,
    build:caarray-common.jar,
        build:caarray-ejb.jar,
        build:caarray.war,
        build:caarray.ear" />

    <target name="build:caarray-common.jar" depends="compile:caarray-common.jar,configure-datasource-for-deploy">
        <mkdir dir="${caarray-common.target.dir}"/>
        <jar destfile="${caarray-common.jar}">
            <fileset dir="${caarray-common.classes.dir}" />
        </jar>
    </target>

    <target name="build:caarray-ejb.jar" depends="compile:caarray-ejb.jar">
        <mkdir dir="${caarray-ejb.target.dir}"/>
        <jar destfile="${caarray-ejb.jar}">
            <fileset dir="${caarray-ejb.classes.dir}" />
        </jar>
    </target>

    <target name="build:caarray-client.jar" depends="compile:caarray-common.jar,compile:caarray-ejb.jar">
        <jar destfile="${caarray-client.jar}">
            <fileset dir="${caarray-common.classes.dir}">
                <include name="**/domain/*" />
                <include name="**/domain/**/*" />
                <include name="**/query/*" />
            </fileset>
            <fileset dir="${caarray-ejb.classes.dir}">
                <include name="**/CaArraySearchService.class" />
            </fileset>
        </jar>
    </target>

    <target name="build:caarray.war" depends="compile:caarray.war">
        <mkdir dir="${caarray-war.target.dir}"/>
        <war destfile="${caarray.war}" webxml="${caarray-war.webapp.dir}/WEB-INF/web.xml">
            <fileset dir="${caarray-war.webapp.dir}">
                <exclude name="WEB-INF/**"/>
            </fileset>
            <webinf dir="${caarray-war.webapp.dir}/WEB-INF" >
                <exclude name="web.xml"/>
            </webinf>
            <classes dir="${caarray-war.classes.dir}" />
            <lib dir="${lib.dir}">
                <include name="commons-beanutils-1.7.0.jar" />
                <include name="commons-codec-1.3.jar" />
                <include name="commons-collections-3.1.jar" />
                <include name="commons-digester-1.6.jar" />
                <include name="commons-el-1.0.jar" />
                <include name="commons-lang-2.3.jar" />
                <include name="commons-logging-1.1.jar" />
                <include name="myfaces-api-1.1.5.jar" />
                <include name="myfaces-impl-1.1.5.jar" />
            </lib>
        </war>
    </target>

    <target name="build:caarray.ear" depends="build:caarray.war,build:caarray-ejb.jar,build:caarray-common.jar">
        <mkdir dir="${caarray-ear.target.dir}"/>
        <ear destfile="${caarray.ear}" appxml="${caarray-ear.resources.dir}/application.xml">
            <fileset dir="${caarray-war.target.dir}">
                <include name="caarray.war" />
            </fileset>
            <fileset dir="${caarray-ejb.target.dir}">
                <include name="caarray-ejb.jar" />
            </fileset>
            <fileset dir="${caarray-common.target.dir}">
                <include name="caarray-common.jar" />
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="activation.jar" />
                <include name="antlr-2.7.6.jar" />
                <include name="asm.jar" />
                <include name="asm-attrs.jar" />
                <include name="axis.jar" />
                <include name="cacore32-client.jar" />
                <include name="castor-1.0.2.jar" />
                <include name="cglib-2.1.3.jar" />
                <include name="commons-collections-3.2.jar" />
                <include name="commons-discovery-0.2.jar" />
                <include name="commons-logging-1.1.jar" />
                <include name="commons-discovery-0.2.jar" />
                <include name="dom4j-1.6.1.jar" />
                <include name="jaxrpc.jar" />
                <include name="jta.jar" />
                <include name="log4j-1.2.13.jar" />
                <include name="mail.jar" />
                <include name="mysql-connector-java-5.0.5-bin.jar" />
                <include name="saaj.jar" />
                <include name="spring.jar" />
                <include name="spring-richclient-full-0.1.0.jar" />
                <include name="wsdl4j-1.5.1.jar" />
                <include name="xercesImpl.jar" />
                <include name="xml-apis.jar" />
          <include name="netcdf.jar" />
            </fileset>
        </ear>
    </target>

    <!-- ******************************************************************* -->
    <!-- ** TEST TARGETS                                                  ** -->
    <!-- ******************************************************************* -->

    <target name="test" depends="test:unit" />

    <!-- JUnit Test Targets -->

    <target name="test:unit" depends="test:junit-caarray-common.jar,
      test:junit-caarray-ejb.jar,
      test:junit-caarray.war,
      test:junit-report,
      test:cobertura-report,
      test:cobertura-check">
        <fail if="junit.failure" message="There were JUnit failures." />
        <fail if="cobertura.failure" message="Test coverage was insufficient (see Cobertura report)." />
    </target>

    <!-- caarray-common.jar -->

    <target name="test:instrument:caarray-common.jar" depends="compile:caarray-common.jar">
        <cobertura-instrument todir="${caarray-common.instrumented.classes.dir}">
            <fileset dir="${caarray-common.classes.dir}" />
        </cobertura-instrument>
    </target>

    <target name="test:compile:caarray-common.test.classes" depends="compile:caarray-common.jar,test:functional:compile-tests">
        <mkdir dir="${caarray-common.test.classes.dir}" />
        <javac srcdir="${caarray-common.test.src.dir}" destdir="${caarray-common.test.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${test.classes.dir}" />
                <pathelement location="${caarray-common.classes.dir}" />
            <pathelement location="${caarray-common.test.files.dir}" />
            <pathelement location="${caarray-common.resources.dir}" />
            <pathelement location="${commons-io.jar}" />
                <pathelement location="${commons-logging.jar}" />
                <pathelement location="${junit.jar}" />
                <pathelement location="${hibernate.jar}" />
                <pathelement location="${netcdf.jar}" />
            </classpath>
        </javac>
    </target>

    <target name="test:junit-caarray-common.jar" depends="test:compile:caarray-common.test.classes,test:instrument:caarray-common.jar,configure-datasource-for-test">
        <run-junit-tests
      test.src.dir="${caarray-common.test.src.dir}"
      xml.output.dir="${caarray-common.target.dir}/junit"
      instrumented.classes="${caarray-common.instrumented.classes.dir}"
      classpath="${caarray-common.test.classes.dir};${test.data.dir};${test.classes.dir};${commons-lang.jar};${commons-io.jar};${caarray-common.test.files.dir};${caarray-common.classes.dir};${caarray-common.resources.dir};${antlr.jar};${asm.jar};${asm-attrs.jar};${c3p0.jar};${cglib.jar};${dom4j.jar};${hibernate.jar};${commons-logging.jar};${commons-collections.jar};${mysql-connector.jar};${netcdf.jar};${jta.jar};${junit.jar};${javacsv.jar}" />
    </target>

    <!-- caarray-ejb.jar -->

    <target name="test:instrument:caarray-ejb.jar" depends="compile:caarray-ejb.jar">
        <cobertura-instrument todir="${caarray-ejb.instrumented.classes.dir}">
            <fileset dir="${caarray-ejb.classes.dir}" />
        </cobertura-instrument>
    </target>

    <target name="test:compile:caarray-ejb.test.classes" depends="compile:caarray-ejb.jar,compile:caarray-common.jar">
        <mkdir dir="${caarray-ejb.test.classes.dir}" />
        <javac srcdir="${caarray-ejb.test.src.dir}" destdir="${caarray-ejb.test.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${caarray-ejb.classes.dir}" />
                <pathelement location="${caarray-common.classes.dir}" />
                <pathelement location="${caarray-common.test.classes.dir}" />
                <pathelement location="${test.classes.dir}" />
                <pathelement location="${cacore32-client.jar}" />
                <pathelement location="${commons-lang.jar}" />
                <pathelement location="${commons-logging.jar}" />
                <pathelement location="${commons-io.jar}" />
                <pathelement location="${javaee.jar}" />
                <pathelement location="${junit.jar}" />
            </classpath>
        </javac>
    </target>

    <target name="test:junit-caarray-ejb.jar" depends="test:compile:caarray-ejb.test.classes,test:instrument:caarray-ejb.jar,compile:caarray-common.jar,test:functional:compile-tests">
        <run-junit-tests
            test.src.dir="${caarray-ejb.test.src.dir}"
            xml.output.dir="${caarray-ejb.target.dir}/junit"
            instrumented.classes="${caarray-ejb.instrumented.classes.dir}"
            classpath="${caarray-ejb.test.classes.dir};${caarray-common.test.classes.dir};${test.data.dir};${test.classes.dir};${caarray-ejb.test.resources.dir};${caarray-common.test.files.dir};${caarray-ejb.classes.dir};${caarray-common.classes.dir};${cacore32-client.jar};${affxfusion.jar};${antlr.jar};${asm.jar};${asm-attrs.jar};${c3p0.jar};${cglib.jar};${javacsv.jar};${dom4j.jar};${hibernate.jar};${commons-logging.jar};${commons-lang.jar};${commons-collections.jar};${commons-io.jar};${commons-lang.jar};${mysql-connector.jar};${jta.jar};${junit.jar};${spring.jar};${log4j.jar}" />
    </target>

    <!-- caarray.war -->

    <target name="test:instrument:caarray.war" depends="compile:caarray.war">
        <cobertura-instrument todir="${caarray-war.instrumented.classes.dir}">
            <fileset dir="${caarray-war.classes.dir}" />
        </cobertura-instrument>
    </target>

    <target name="test:compile:caarray-war.test.classes" depends="compile:caarray.war,compile:caarray-common.jar">
        <mkdir dir="${caarray-war.test.classes.dir}" />
        <javac srcdir="${caarray-war.test.src.dir}" destdir="${caarray-war.test.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${caarray-war.classes.dir}" />
                <pathelement location="${caarray-common.classes.dir}" />
                <pathelement location="${caarray-ejb.classes.dir}" />
                <pathelement location="${caarray-ejb.test.classes.dir}" />
        <pathelement location="${caarray-common.test.files.dir}" />
                <pathelement location="${myfaces-api.jar}" />
                <pathelement location="${junit.jar}" />
            </classpath>
        </javac>
    </target>

    <target name="test:junit-caarray.war" depends="test:compile:caarray-war.test.classes,test:instrument:caarray.war,compile:caarray-ejb.jar,compile:caarray-common.jar,test:compile:caarray-ejb.test.classes">
        <run-junit-tests
      test.src.dir="${caarray-war.test.src.dir}"
        xml.output.dir="${caarray-war.target.dir}/junit"
      instrumented.classes="${caarray-war.instrumented.classes.dir}"
        classpath="${caarray-war.test.classes.dir};${caarray-war.classes.dir};${caarray-common.test.files.dir};${caarray-common.classes.dir};${caarray-ejb.classes.dir};${commons-logging.jar};${caarray-ejb.test.classes.dir};${myfaces-api.jar};${junit.jar}" />
    </target>

    <target name="test:junit-report">
        <mkdir dir="${site.dir}/junit" />
        <junitreport todir="${site.dir}/junit">
            <fileset dir="${caarray-common.target.dir}/junit">
                <include name="TEST-*.xml" />
            </fileset>
            <fileset dir="${caarray-ejb.target.dir}/junit">
                <include name="TEST-*.xml" />
            </fileset>
            <fileset dir="${caarray-war.target.dir}/junit">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${site.dir}/junit" />
        </junitreport>
    </target>

    <!-- Cobertura Test Targets -->
    <target name="test:cobertura-report">
        <cobertura-report format="html" destdir="${site.dir}/cobertura" >
            <fileset dir="${caarray-common.src.dir}" />
            <fileset dir="${caarray-ejb.src.dir}" />
            <fileset dir="${caarray-war.src.dir}" />
        </cobertura-report>
    </target>

    <target name="test:cobertura-check">
        <cobertura-check failureproperty="cobertura.failure"
        haltonfailure="false"
        branchrate="0"
      linerate="0"
      packagebranchrate="0"
      packagelinerate="0"
      totalbranchrate="10"
      totallinerate="10" />
    </target>

    <!-- Functional (Selenium) Test Targets -->

    <target name="test:functional" depends="test:functional:run-tests">
        <fail if="junit.failure" message="There were Selenium test failures." />
    </target>

    <target name="test:check-functional-test-results">
        <fail if="junit.failure" message="There were Selenium test failures." />
    </target>

    <target name="test:selenium:start-server">
        <java jar="${selenium-server.jar}" fork="true" spawn="true">
            <arg line="-timeout 30"/>
            <arg value="-port"/>
            <arg value="${selenium.server.port}"/>
        </java>
    </target>

    <target name="test:selenium:stop-server">
        <get taskname="selenium-shutdown"
            src="http://localhost:${selenium.server.port}/selenium-server/driver/?cmd=shutDown"
            dest="${target.dir}/temp/selenium-shutdown-result.txt" ignoreerrors="true" />
        <echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
    </target>

    <target name="test:functional:compile-tests">
        <mkdir dir="${test.classes.dir}" />
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="true">
            <classpath>
                <pathelement location="${selenium-java-client-driver.jar}" />
                <pathelement location="${selenium-java-client-driver-tests.jar}" />
                <pathelement location="${junit.jar}" />
            </classpath>
        </javac>
    </target>

    <target name="test:functional:run-tests" depends="test:selenium:run-tests" />

    <target name="test:selenium:run-tests" depends="test:functional:compile-tests">
        <antcall target="test:selenium:start-server" />
        <run-junit-tests
            test.src.dir="${test.src.dir}"
            xml.output.dir="${test.target.dir}/junit"
            classpath="${test.classes.dir};${selenium-server.jar};${selenium-java-client-driver.jar};${selenium-java-client-driver-tests.jar};${junit.jar}" />
        <antcall target="test:selenium:stop-server" />
    </target>

    <!-- ******************************************************************* -->
    <!-- ** CHECK TARGETS                                                 ** -->
    <!-- ******************************************************************* -->

    <target name="check" depends="check:checkstyle,check:pmd">
        <fail if="checkstyle.failure" message="There were Checkstyle failures." />
        <fail if="pmd.failure" message="There were PMD failures." />
    </target>

    <target name="check:checkstyle" depends="build:caarray-common.jar,build:caarray-ejb.jar,compile:caarray.war">
        <mkdir dir="${site.dir}/checkstyle" />
        <checkstyle config="${checkstyle.config}" failureProperty="checkstyle.failure" failOnViolation="false">
            <classpath>
                <pathelement location="${caarray-common.jar}" />
                <pathelement location="${caarray-ejb.jar}" />
                <pathelement location="${caarray-war.classes.dir}" />
                <pathelement location="${cacore32-client.jar}" />
            </classpath>
            <formatter type="xml" tofile="${site.dir}/checkstyle/checkstyle.xml" />
            <fileset dir="${caarray-common.src.dir}" includes="**/*.java" />
            <fileset dir="${caarray-ejb.src.dir}" includes="**/*.java" />
            <fileset dir="${caarray-war.src.dir}" includes="**/*.java" />
        </checkstyle>
        <xslt in="${site.dir}/checkstyle/checkstyle.xml"
            out="${site.dir}/checkstyle/checkstyle.html"
            style="${resource.dir}/checkstyle-frames.xsl">
            <param name="output.dir" expression="${site.dir}/checkstyle" />
        </xslt>
    </target>

    <target name="check:pmd">
        <mkdir dir="${site.dir}/pmd" />
        <mkdir dir="${site.dir}/pmd-jsp" />

        <pmd failonerror="false"
            rulesetfiles="${resource.dir}/pmd-ruleset.xml"
            failurespropertyname="pmd.failure"
            targetjdk="1.5">
            <formatter type="xml" toFile="${site.dir}/pmd/pmd-report.xml" toConsole="false" />
            <fileset dir="${caarray-common.src.dir}">
                <include name="**/*.java" />
            </fileset>
            <fileset dir="${caarray-war.src.dir}">
                <include name="**/*.java" />
            </fileset>
            <fileset dir="${caarray-ejb.src.dir}">
                <include name="**/*.java" />
            </fileset>
        </pmd>

        <pmd failonerror="false"
            rulesetfiles="${resource.dir}/pmd-jsp-ruleset.xml"
            failurespropertyname="pmd.jsp.failure"
            targetjdk="1.5">
            <formatter type="xml" toFile="${site.dir}/pmd-jsp/pmd-jsp-report.xml" toConsole="false" />
            <fileset dir="${caarray-war.webapp.dir}">
                <include name="**/*.jsp" />
            </fileset>
        </pmd>

        <xslt in="${site.dir}/pmd/pmd-report.xml"
            out="${site.dir}/pmd/pmd-report.html"
            style="${resource.dir}/pmd-report-per-class.xslt">
        </xslt>

        <xslt in="${site.dir}/pmd-jsp/pmd-jsp-report.xml"
            out="${site.dir}/pmd-jsp/pmd-jsp-report.html"
            style="${resource.dir}/pmd-report-per-class.xslt">
        </xslt>
    </target>

    <target name="check:pmd:update-eclipse-projects">
        <copy file="${resource.dir}/pmd-ruleset.xml" tofile="${caarray-common.dir}/.ruleset" />
        <copy file="${resource.dir}/pmd-ruleset.xml" tofile="${caarray-war.dir}/.ruleset" />
        <copy file="${resource.dir}/pmd-ruleset.xml" tofile="${caarray-ejb.dir}/.ruleset" />
    </target>

    <!-- ******************************************************************* -->
    <!-- ** SITE TARGETS                                                  ** -->
    <!-- ******************************************************************* -->


    <!-- ******************************************************************* -->
    <!-- ** DEPLOY TARGETS                                                ** -->
    <!-- ******************************************************************* -->

    <target name="deploy" depends="build:caarray.ear,prepare:create-local.properties">
        <copy file="${caarray.ear}" todir="${jboss.deploy.dir}" />
        <copy file="${resource.dir}/deploy/caarray-mysql-ds.xml" todir="${jboss.deploy.dir}">
            <filterset refid="caarray.filterset" />
        </copy>
    </target>

    <target name="undeploy">
        <delete file="${jboss.deploy.dir}/caarray-mysql-ds.xml"/>
        <delete file="${jboss.deploy.dir}/caarray.ear"/>
    </target>

    <target name="deploy:deploy-and-wait" depends="deploy">
        <sleep seconds="5" />
        <waitfor maxwait="60" maxwaitunit="second" checkevery="5" checkeveryunit="second">
            <http url="http://${jboss.server.hostname}:${jboss.server.port}/caarray"/>
        </waitfor>
    </target>

    <target name="deploy:stop-jboss">
        <java classname="org.jboss.Shutdown" fork="true" spawn="false">
            <arg line="-s ${jboss.server.hostname} -S" />
            <classpath>
                <pathelement location="${jboss.home}/bin/shutdown.jar" />
            </classpath>
        </java>
    </target>

    <target name="deploy:start-jboss" depends="deploy:check-if-jboss-is-running" unless="jboss.running">
        <exec executable="cmd" dir="${jboss.home}/bin" spawn="true">
            <env key="NOPAUSE" value="true" />
            <arg line="/c run.bat"/>
        </exec>
    </target>

    <target name="deploy:check-if-jboss-is-running">
        <condition property="jboss.running">
            <socket port="${jboss.server.port}" server="${jboss.server.hostname}" />
        </condition>
    </target>

    <target name="copy-jsp" description="Copies the jsp's over to the unpacked war directory in jboss">
        <for param="toDir">
          <path>
            <dirset dir="${jboss.deploy.dir}/../tmp/deploy" includes="tmp*caarray.ear-contents/caarray-exp.war"/>
          </path>
          <sequential>
              <copy todir="@{toDir}">
                  <fileset dir="${caarray-war.webapp.dir}">
                      <include name="**/*.jsp"/>
                  </fileset>
              </copy>
          </sequential>
        </for>
    </target>

  <!-- BEGIN STELLIGENT ADD -->
  <property name="cargo-jar" value="cargo-core-uberjar-0.9.jar" />
  <property name="cargo-ant-jar" value="cargo-ant-0.9.jar" />
  <property name="jboss.dir" value="${target.dir}/jboss" />
  <property name="jboss.tmp.dir" value="${target.dir}/jboss-test" />
  <property name="jboss.refid" value="tmptmct01" />
  <property name="jboss.installer.url" value="http://downloads.sourceforge.net/jboss/jboss-4.0.4.GA.zip" />

    <target name="integrate-db">
      <ant inheritAll="true" inheritRefs="true" antfile="${basedir}/build/database-integration.xml" target="all" />
  </target>

    <target name="deploy-jboss" depends="build">
    <ant inheritAll="true" inheritRefs="true" antfile="${basedir}/build/deployment.xml" target="uber-clean" />
      <ant inheritAll="true" inheritRefs="true" antfile="${basedir}/build/deployment.xml" target="cargo" />
  </target>
    <property name="properties.dir" value="${basedir}/build" />
  <property name="keyfile.file" value="caarray2-key.properties" />
  <property name="envproperties.file" value="default.properties" />

  <target name="validate-properties">
    <get dest="${lib.dir}/nci-ant.jar" usetimestamp="false"
      ignoreerrors="true" src="${stelligent.download.site}/nci-ant.jar">
      </get>
    <taskdef name="ncitask" classname="com.stelligent.nci.anttasks.PropertyChecker">
      <classpath>
          <pathelement location="${lib.dir}/nci-ant.jar" />
        </classpath>
    </taskdef>
      <ncitask keyFile="${properties.dir}/${keyfile.file}" compareFile="${properties.dir}/${envproperties.file}"/>
  </target>
  <!-- END STELLIGENT ADD -->

</project>
