<!-- *********************************************************************** -->
<!-- ** PROJECT:   caArray - remote deployment                            ** -->
<!-- *********************************************************************** -->

<project name="caarray-remote-deploy" default="all" basedir=".">	
	
	<!-- PROPERTIES -->
	<property file="${build.envpropertyfile}" />
	<property file="local.properties" />
	<property name="lib.dir" value="../lib" />
	<property name="svn.tags.folder" value="tags" />
	<property name="svn.trunk.folder" value="trunk" />

	<!-- PATHS -->
    <path id="project.classpath">
       <fileset dir="${lib.dir}">
          <include name="**/*.jar" />
       </fileset>
    </path>	

	<taskdef name="svn" classpathref="project.classpath" classname="org.tigris.subversion.svnant.SvnTask"/>
	
   <property name="jsch.jar" value="jsch-0.1.33.jar"/>
   <property name="antunit.jar" value="ant-antunit-1.0.jar"/>
   <property name="jsch.jar.location" value="${ant.home}/lib/${jsch.jar}"/>
   <property name="antunit.jar.location" value="${ant.home}/lib/${antunit.jar}"/>
   <available file="${jsch.jar.location}" property="jsch.jar.present"/>
   <available file="${antunit.jar.location}" property="antunit.jar.present"/>

   	<condition property="no.jsch">
		<not>
			<isset property="jsch.jar.present"/>
		</not>
	</condition>

	<condition property="no.antunit">
		<not>
			<isset property="antunit.jar.present"/>
		</not>
	</condition>

	<condition property="build.no.label">
		<and>
			<not>
				<isset property="create.label"/>
			</not>
			<not>
				<isset property="use.label"/>
			</not>
		</and>
	</condition>

    <condition property="label.error">
		<and>
			<isset property="svn.tag"/>
			<not>
				<isset property="use.label"/>
			</not>
			<not>
				<isset property="create.label"/>
			</not>
		</and>
	</condition>
	
	<!-- TARGETS -->
	
	<target name="svn:scorch">
		<echo message="Scorching local SVN working directory ${svn.local.trunk}..." />
		<delete dir="${svn.local.trunk}" />
	</target>
	
	<target name="svn:checkout-caarray" unless="use.label">
		<echo message="Checking out latest caarray version from ${svn.caarray.url}...(no label)" />
		<svn username="anonymous" password="">
			<checkout url="${svn.caarray.url}/${svn.trunk.folder}/software" revision="HEAD" destPath="${svn.local.trunk}" />
		</svn>
	</target>
	
	<target name="svn:checkout-caarray-label" if="use.label">
		<echo message="Checking out caarray from ${svn.caarray.url} using SVN tag ${svn.tag}..." />
		<svn username="anonymous" password="">
			<checkout url="${svn.caarray.url}${svn.tags.folder}/${svn.tag}/software" revision="HEAD" destPath="${svn.local.trunk}" />
		</svn>
	</target>
	
	<target name="prepare-remote-properties">
		<copy todir="${svn.local.trunk}/build" overwrite="true">
			<fileset dir="." includes="**/*.properties" />
		</copy>
	</target>
	
   <target name="remote-deployment">
		<antcall target="svn:scorch" />
		<antcall target="svn:checkout-caarray" />
		<antcall target="svn:checkout-caarray-label" />
		<antcall target="prepare-remote-properties" />
	    <ant inheritAll="false" inheritRefs="true" antfile="${svn.local.trunk}/build/build.xml" target="remote-deploy"/>
	</target>

	<tstamp prefix="caarray" />
	<target name="remote-deployment-createlabel" if="create.label">
	    <echo message="Deploying to ${ssh.server.hostname} and adding SVN tag ${svn.tag}..." />
	    <antcall target="remote-deployment" />
	    <ant inheritAll="false" inheritRefs="true" antfile="${svn.local.trunk}/build/build.xml" target="remote-deploy"/>
	    <svn username="${svn.user.name}" password="${svn.user.pwd}">
            <copy 
				srcUrl="${svn.caarray.url}/${svn.trunk.folder}"
				destUrl="${svn.caarray.url}/${svn.tags.folder}/${svn.tag}"
				message="Tag created by automated build and deployment script - ${caarray.TODAY}" />
        </svn>
	</target>

	<target name="help">
	  <echo>
        Example usage: ant -f remote-build.xml -Dbuild.envpropertyfile=C:/dev/caarray2/software/build/DEV.properties -Dnotest=true -Dnoglobus=true
        notest - Disables the execution of all automated tests
        envpropertyfile - Fully-qualified path of property file (e.g. DEV.properties)
        nodbintegration - Disable database execution (useful for Staging/Production)
        nodeploy - Disable deployment
        use.tag - Subversion tag name to be used in building
        create.tag - Name of Subvesion tag to create to label trunk
        noglobus - Temporary property to turn off use of Globus
   	  </echo>
	</target>

	<target name="diagnostics" depends="fail-if-no-antunit, fail-if-no-jsch">
	  <ant inheritAll="true" inheritRefs="true" antfile="${basedir}/test-build.xml" />
	</target>

	<target name="fail-if-no-label" if="label.error">
      <fail>ERROR: When svn.tag property is passed, there must be either a use.label or create.label System property</fail>
	</target>

	 <target name="fail-if-no-jsch" if="no.jsch">
        <copy todir="${ant.home}/lib" overwrite="true">
			<fileset dir="${lib.dir}" includes="${jsch.jar}" />
		</copy>
		<fail>${jsch.jar} must be in your ${ant.home}/lib directory. This file (${jsch.jar}) has been copied to your ${ant.home}/lib directory. IMPORTANT: You must rerun your build script again.</fail>
	</target>

	<target name="fail-if-no-antunit" if="no.antunit">
        <copy todir="${ant.home}/lib" overwrite="true">
			<fileset dir="${lib.dir}" includes="${antunit.jar}" />
		</copy>
		<fail>${antunit.jar} must be in your ${ant.home}/lib directory. This file (${antunit.jar}) has been copied to your ${ant.home}/lib directory. IMPORTANT: You must rerun your build script again.</fail>
	</target>
	
	<target name="all" depends="diagnostics, fail-if-no-label, remote-deployment-createlabel, remote-deployment" />	   

</project> 