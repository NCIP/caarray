


very large system, can be quite daunting.... 
would be nice to have something simple to get started

more up-todate web technology..looking at more and more files

objectmodel pulls away from sql and rdbms
takes getting used to
prefer the well-ordered sql file
with indexes and constraints all together

in retrospect could look at generated sql and edit the order..
understand that there are significant advantages to using hibernate...
used to carefully designing schema ( ground truth) in a file or two
well organized...

with hibernate, need to look around at annotations all across your files

when considering shcema changes migration, would never consider refactoring database
through object model..sql is the way to go..checking things, moving data, correcting
data, qc on data...much too tedious to do this through objects....so in the end i
prefer a more db centric approach...yes, hibernate insulates you from 
db, but....






seems like there is a need for more decisions early, several layers also forces this
need to make design decisions in stone, going back and forth between layers is 
inefficient, easy to lose track

--------------
so..what kind of things do i want to see right away if considering developing/extending/modifying

::
Wehere are the changes
show slides few examples of directory organization
( e.g. domain, ejb, war levels)
----------------
How do I apply my changes cleanly while keeping track in a simple way.
svn may be more sophisticated, but i think some simplicity is needed here
esp. for those of us who aren't consummate web professionals.
this is a slide..

-------------
consider slide for what kinds of chnages

--------


recommendations: provide a simplfified documented build file with easy to understand
targets.

if considering developing, at least get some help on doing the fastest builds for shorter turnaround time while
developing and testing..many of these targets can be extremely time-consuming

======================================
======================================
2009/03/23

Experiment WILL HAVE ONLY one Assay type

All samples in RPLA-TAB will become RPLASamples.
What are reasons for using RPLASamples.

1) Extends Sample so has all that Sample has. and in future, could use sample grouping when anf if
2) discriminator in table shoudl prevent misfires in interface as
actual Sample ( like downloading data, etc...)

Won't confuse the two. They are different, so subclass is way of
differentiating

WRONG...rplasample extending from sample will inherit
other associations...maybe shoudl inherit from 
abstract bio material instead.

consider search capability ( taht exists for samples) for rplasamples?

=========


Overview

model changes

Extension overview / technical approach

possible recorded demo
send docs to Zhang

----

show graphically changed files in each jar, ( and docs are in place)
"cleaner and easier to understand  than pathces or svn merge"


future work visualize micriovigene
pg, supercurve

eventually register model 


Decide what makes sense to see/use through web interface:

	Add   | Edit   | Delete
Abs
Samples
RplaArrays
RplaHybs
Expfactiors
factorvalues
Image data

==========

Decide on use cases finally:

Be able to make a copy of rplarray, or just another link to it?

so rplarrays don't necessarily belong to Experiment, right?

How to reference existing Ab in system when importing? When, for examples
user wants to import data from a new rplahybridization

===========================
have count on front page of rplahybs on initial page
When RPLA assay type is chosen, elide 
Provider
Organism  ( both these maybe not if myltiple associations allowed)
also elide Import panel options ( autogeneration thing)

include text about carpla instance in intiali page
===================


occurs to me that 
"matched smaples are higher-lelev issue and probably outside of scope of this proejct,
since you don;t have such a thing, and such matching coudl easily occur in the current assay types availabale now...

so keep one assay type per experiment, replace bar2... 

---------


What does it mean to have "matched" samples?
How are they matched?

How to show desired outcome for such matching?

===========

Consider abstract notion of "linking" between experiments?
why? how? when? by whom?

can an experiment be included under multiple projects? that cuold help....

stay away from matching sets if factor values
---model of sets fo factor values...treatment groups...imaging assays, so on...

could samples also be matched by a "matching" protocol?

consider explicit internal linking.. metdata type linking

critical question: to do ww/ interface?
 change it?
 how to add to it?
 leave it alone possible?



======================




the antibody used could also be a factor value, right?




adopt same term policy as cav2? : can add terms, for antibody validation for xample?

careful with bio vs tech replciacates.

control -> technical  background with buffers etc

dmso.egf one compound treatment
 just egf, assume dmso
 
 
shoudl antibodies have site-wide scope?
can antibodies also be entered via rpla-tab?

what elements in ca2 have site-wide scope?


shoudl dilution be referred by name??

col/row can be in any order with regard to sradf


remember to verify sample names are unique





----------
matched samples, not replicates in any sense, will have same "source" and have same factor values

how to do this???





----------




use cases:

users can browse antiodies
users ( which users? ) can annotate antibodies
antibodies have own terms
antibodies have access control


upload/import/parsing/validation:

upload rpla-tab
import rpla-tab
edit?
export?

how are factor vALUES ASSOCIated explicitly?

catalog id,lot id -> gene

gene -ab name

how are genes references in ca2?


if experiment is of a different type, view changes...

an experiment cna have both mdata nd rdata
how can they be linked? by tech/bio replciate?


=======================================





caarray.ear
caarray.war
caarray-client.jar
caarray-common.jar
caarraydb
caarray-docs
caarray-ejb.jar
caarray-generated
caarrayRemoteClient
CaArraySvc
cacoresdk
dist
lib
load-test
test
test-data



from teleconf of 12/04/07: for next time
wireframes with use cases
real data set(s)

GA probably end of januarya

Use "Roundtrip" on annotated model submitted by Eric

Look at new LexBig service..

==============

defend idea that using comment for this extensions is not a good idea.


======

get array data out of array express under joe gray's name to put into
caarray2


============

maybe still use javacc but make sure to 
collapse any code in the regexp chains into the 
constructors of the header object...do i need the 
hreader object??????
===========

grammar succinctly shows rules and principality of nodes

make .jj one tneth as long?



========================
absorb comments in sha1sumutility--rename function better.
===========

instead of debugPrintProtocols ( where? ) 
use somethign like toString ...referencing modeling


==========

use weak references in parser?

-----------
think about some interface hiding omeis..do tests liek they did...

---------

have secure version up for next time...

----------------



==========================



=========================
develop modules to connect bs w/ caarray2 and vice versa
	strart with limited funtionality, integrate more later...
	would be usefule experience in how to connect data
	
	options: connect via cagrid, intgeration of data modeling
	
abminer in picture?
grdify it?
--------------------------

work out use cases and web pages
changes addtitive, non additive?
can all changes in fact be additive?
-------------------

some icbp data from heidi at:

[gvf@caarray2 HTA_ICBP_Pilot]$ pwd
/data/hta/HTA_ICBP_Pilot



============================

look At use cases in brent style
and scope document

in caarray2 you can download data for a sample or set of smaples

====
where is selection of parser decided by file suffix?
====
COuld display my own validation messages upon validation of rpla-tab like
it is done ( hyperlinked for warnings) in caarray2
===============

be able to register local caarray2/carpla node on grid
so will see on browse front page


==============
do secure install/apache/jboss with real ceritifictae



------------
shoudl be considering on best way to get data in to the system?

===================
1 end startint text file

vs.

other end all through interface
===================

inbetween? interface helps generate text file?

For next teleconf:

1) put up use cases and requirements like brent's
2) timeline updated

3) add reporter-factor-value asasocaition, clean up modeling

Dec 4th

--------------------------
?
Will every spot correspond to a Sample ?
Will every control spot be a Sample?
DMSO can be considered a biomaterial

IS there a way to differentiate samples based on treatment ? how?

need rplarray -surface type as term : assocaition to term

where do hardware specs go

will need to uplaod protocol files such as "Prep of Cell lysate for rpla"

what ios streptavidin-biotin complex  used for?

---

extremely challenging to figure out a way to get from the mass of excel
files to something verifiable and clear


----------------

since this is basically "new" :
considering the following for user-ease:

1) all from rpla-tab . use some interface widgets to make edits/corrections, will need others to make 
otehr sorts of edits

2) some from rpla-tab same as above for edits, will need nes widgtes to enter information

================


in mage, controltype brlongd to super class DesignElement

caarray2, moved this to PhysicalProbe
?in carpla:
moved to rplarrayreporter

=========
set caarray entitiy super class correctly everywhere






-------------
had iterated claims that 

array != rplarray
rplarray has no array design file per se, the array is the arraydesign
it is not a microarray
does not have 0..1 with organism
Abstract probe annotation doesn't apply to rplarray ( but actuaklly may be useful( doubtful) for the Ab)

Entity vs object...entity is to be externally referenceable

---------

time to login, ,maybe looking for ldap


should new type of smaple be linked to factor value? or just reporter?


---
cacore dsk only really used in evs utility and mged ontology lookerupper

------

get info from heidi, same sample has rplarray and microarray data

------

add surface type term thingie to rplarray


----

rplatab providers and performers delimited by semicolons


--------

comment[name] allowable in rpla-idf

------------

handle -> 

------

can have multiple MaterialTypes?

---
is array data file required?




----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
We are deploying caarray2 on
caarray2.lbl.gov ( more for production deployment of caarray2 straight )
and 
cox.lbl.gov ( more for development iterations using carpla)

caarray2 is up now, will be updating from SVN on a regular basis.

caarrayuser
firebird05

---------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
besides managing imaging data, my group is also involved in microarray data management and analysis
and in the background, I'm going to push for caarray2 adoption locally. 

just one group the hta group has about 
3000 cel files.
which come from about 30 experiments

we also have microarray data for the icbp project...




while getting to knwo the system, introduce potential users around here, 
see if i can migrate some of their data so they can adopt caarray2 as data annotation/distribution.

Lots of data from heidi? how much? is a ht system, also get feedback from here
3000 cel files.
about 30 exports

HTHGU133A
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------

Show updated UML model
MODEL





appears to be no explicit links between factor value and Measurement, or Protocol or what? Weren't these there before in mage?
I think mage had pointed to measurement.

Does cabio have array reporter?

are protocols shared? can you edit a protocol?



use cases changed?

get rplarrays for a given experiment
retrieve rplarrays that use a given Ab ( by how? hugo name..provider..manufacturrer....by validation result, etc...)?

retrieve biosource-biosample chains for a given rplarray

retrieve and display tiff-cionverted-to-jpeg for a given rplarray

retrieve all data files for a particular rplarray? and what if data files span multiple arrays?






----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------


Ab validation

data is somewhat slow coming, antibody validation still critical.

Ab validation (and possible use of abminer) still very critical.

http://discover.nci.nih.gov/abminer/browseAllAntibody.do

http://discover.nci.nih.gov/abminer/Nci60Results.jsp?ID=19




will be including images/quantitation/ results of rppa : wasterns..grpahs comparing correlation of the two methods

want western to show single-predominant band?  low background/high signal

can have different results with differnet cell types

different results in cell lines v.s tissues

SOP very important!
buffer conditions

provider
catalog no
lot no
validated by

at least 8 samples for validation along with correlation coefficient
include a treated smaple where level of specific protein is supposed to be altered
 ideally at least 4 cell lines
 
 what western quantitation software would be used?

with quantitated western

so would this effectively be an ab validation database



abminer
635 available abs with validation by westerns
"immunogen"
vendor
antigen
corresponding gene

western bands: single band, multiple band, wrong molecular weight, no band

show western images for ab


shoudl abmier terms go in controlled vocab? along with possible values?


ab validation: important for reproduciblity






Reproducibility has been hard:
Variability with lot id

Variability  with protocol VERY IMPORTANT
Confirm protocol application everyhere needed....

-----is a protocol linked to a source and a sample? do i know if it is explicitly how sample was created?

----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------

Have basic architectural assumptions changed?
Have use cases changed?
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
Talk about test data from heidi
Having looked through some of the data, there appears to be a ****very citical need for data management, distribution
in this icbp program***. There is no sort of formalized dataset format that easily shows people what's going on.
There are no apparent controlled terminologies for samples, controls, for example...
there is a need to sort out this data. I'd like to use this data as test data for carpla deployment using caarray2.
Need to adopt the data in this form and get into system

----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
So since this has to do with the actual format and organization of the data
First address eric's question about using comments
really should be first class citizens..

Have gone through wire frames and interfaces : What works and what won't work:




In Propose Experiment 
-----------------------------------------------
need to add correct assay type rather than 
gene expression
SNP
DNA
aCGH
---------

There can be multiple organisms tissue types/sites, cell types











How does current system handle mage-tab?

Is particular validation method chosen by file suffix?


Data will be available for editing in the interface, so the existing rpla-tab file will not be correct. right?
So should export of an experiment in the form of an rpla-tab dataset be possible?

Does the current system export a mage-tab file set? Or would a module need to be written to do this?












----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------

RPLA-TAB validation and notes

I made some changes in the format in that protocol types wouldn't be hardwired and required.
Putting those changes in currently...






list validation rules which make it different than mage-tab




Validation shoud involve resolving references to data files ( images, array data, derived array data)
This could be done on the client or server. Previously, I was doing this on the client, where the applet 
could look in the local directory for all referenced files when pointed to an rpla-idf file.

Or it could be done on the server:
*Is it the case that a validated mage-tab file set is validated when all referenced files have been
 uploaded and found?*..
If so, then names for files within a workspace would need to be unique, correct? 
The simplest implementation would imply that.

  apparently comment can appear anywhere in an rpla-idf file or anywhere in sdrf and sradf....





*** important---
Changes from last time: no more fixed name protocols since this would be pulling it away from the genericity of magetab


nned to deal with <-


current vlaidation passes through grammar for header patterns.
this serves to effectibely encapslate many rules that would be harder to express...
such as:


or enforcing in code: such as:
also eserves to communicate more succinctly possible patterns..

regexpression could also be used to generate all possible paths...
useful for  showing users...



could it also be used to enforce site-specific rules? such as?
wouldn't this be tricky?

related: how might new column headers be added and incorporated into parser?





-----------------------------


validation:stuff

verify sradf exists and is not of zero size

verify unique spot locations in locaiton section

verify not extra tabs in header or rows ( check number of columns everywhere)

a source or sample cannot have differing characteristics: exmaple:

same smaple name not duplicated in samples section


same array cannot have different array creation protocols
same image file cannot have different acquistion protocols

sample name in locaitons section must reference samples section

array name in data section must rerfeffence array name in location section


validate all against ontlogy terms?

what if term is not known in system? need to put there first?


// //
	// =============================================================================
	// // validateSradfRows (SradfHeaders,):
	// // know all distinct sources, distinct samples,distinct arrays,
	// // number of rows, all distinct file image files, all distinct array adta
	// // names
	// // a ll references files exisrt
	// //
	// =============================================================================
	// public void validateSradfRows(RplaIdf rplaIdf, SradfHeaders sradfHeaders)
	// {
	//
	// // for each section
	// // //for each row
	// // // // read in row
	// // // // // apply:
	// // // // // checkNumberOfColumns
	// // // // // check types
	// // //
	// //
	//
	// // samplessectioninfo.collectDistinctSourceNames();
	// // samplessectioninfo.collectDistinctSampleNames();
	// // samplessectioninfo.verifyEachSourceHasSameCharacteristics();
	// // samplessectioninfo.verifyEachSampleHasSameCharacteristics();
	//
	// // arraylocationssectioninfo.collectDistinctSampleNames();
	//
	// // all protocols in samples and data section must be present in rplaidf
	// // all antibodies in data section must be present in rplaidf
	//
	// // all factor values must reference an experimental factor declared in
	// // the rplaidf
	//
	// // should all experimental factors me represented??
	//

	//
	// // no array locations for the same array can be duplicated
	//
	// // all samples in array locations must be declared in samples section
	// // samples cannot be duplicated in samples section
	//
	// // all files referenced in data section must exist and be of >0 size
	//
	// // all arrays in data section must be present in locations section
	// // verifyArrayReferences(arraylocationssectioninfo,
	//
	// // non zero number of rows in samples
	// // non zero number of rows in locations
	// // non zero number of rows in data?
	//
	// // same array cannot have different array creation protocols/aparma
	// // same imagefile cannot have different image acquisition
	// // protocols/parma.s
	//
	// }

a b c d
a b c e
null b c f

doesn;t work

verify images are not corrupt: convert tiffs to jpegs for viewing in browser...

rpla-tab uses names of files..must they be unique within scope of the application? 
in other words, say user uploads the files, will they be found by name in the workspace?
can you upload data files with same name?

how does caarray2 deal with say samples that have the same names as other experiments?

how would a new rpla-tab or any mage-tab dataset reference existing sources or samples? 

how will rplarrays be differentiated from other arrays in caarray2? apples and oranges...
( same array arraygroup thing as well?) 




----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------

how are controls handled? in different systems, i've seen controls relegated to second class citizens where they are in fact
critically important and i can't see a reason to not make them more explicit.


negative antibody control: which does not recognize any human antigen ( in pnas paper)
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------

Issue with identifiers:

issue with identifiers/lsid references...

how able to establish equivalence between samples, sources, etc...? 
when is this important?

for what columsn are lsid identifiers important?

does dataset use lsid inderntiders? yes, check local db, exists? no create, yes, display

----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------











############################################################################
############################################################################
############################################################################
############################################################################
############################################################################
############################################################################
############################################################################
############################################################################





Misc:

* We are comparing protein levels across samples  rather than comparing sames across protein types



* as technology progresses there will be higher density robotically spotted rplarrays

* Tie in biosig image modeling?
  

---------------------


could develop graphical tools or interactive tools to help generate sradf files
would need template-type files?



------------------------


how ouwld ed column headers be added and incorporated into existingparser?


could use OBO--could use OBO terms in some particular namespace ( obo::) as column headers?
look at OBO for celllines....


===================================





Validation and Parser Module Design


There will be two distinct modules for validating and parsing a caRPLA data set into objects suitable for the caArray-caRPLA instance database.


Validation, here, means the following:

    1) That the .rpla-idf is syntactically valid
    2) That terms in the .sradf match the .rpla-idf file appropriately
    3) That the .sradf is syntactically valid
    4) That all referenced files can be found
   
   

The first module will validate the .rpla-idf file and the .sradf files.
The result of a successful validation for the data set will be an XML document that will contain the following:

    1) All data from the  .rpla-idf file  wrapped in XML elements.
    2) The column headers from the .sradf file along with their column indexes. The heirarchy of these XML data elements follows implicitly from the MAGE-TAB specification. See the example below.
    3) List of all referenced files
    4) List of all term sources

An XML schema document will be provided for the generated XML file.  

The flexible structure of a MAGE-TAB-derived format is handled using a grammar specification and a parser generator.
The current implementation of this first module uses JavaCC, a popular open-source parser generator.
More information about JavaCC is available at https://javacc.dev.java.net/


The second module will use the resultant XML file and data set files to create objects appropriate for persistence in the caArray-caRPLA instance. Object generation in this module can leverage XSLT stylesheets (for dynamic code generation) and XML parsing.

The validation and implicit data heirarchy following the MAGE-TAB-derived formal grammar is abstracted away into the first module. The subsequent object generation tasks are separated from this validation. A side benefit is that different secondary modules could be used for persistence in other applications or using other languages besides Java.


====================


The .rpla-idf file
File format is derived from the MAGE-TAB spec., v1.0, January 31, 2007.
Variations from the MAGE-TAB .idf format are underlined.

An antibody used in an RPLArray must be listed here and is referenced from an .sradf file.

Multiple antibodies can be used in the experiment (following MAGE-TAB convention of using additional columns and so each antibody has its own fields).

Antibody names must be unique in the .rpla-idf file.
Antibodies in the database will not be uniquely identified by name, and will require additional fields, such as the fields below, for unique identification.
There will be a policy for matching an antibody listed in this file to an existing antibody in the database.


HUGO is one possible preferred term source for describing antibody targets.
http://www.gene.ucl.ac.uk/nomenclature/

The .rpla-idf file may point to multiple *.sradf files.

===============================================================


Investigation Title
Experimental Design
Experimental Factor Name
Experimental Factor Type
Experimental Factor Term Source REF
Antibody Name
Antigen Name
Antigen Name Term Source REF
Antibody Provider
Antibody Catalog ID
Antibody Lot ID
Antibody Comment
Person Last Name
Person First Name
Person Email
Person Phone
Person Address
Person Affiliation
Person Roles
Person Roles Term Source REF
Quality Control Type
Quality Control Term Source REF
Replicate Type
Replicate Term Source REF
Normalization Type
Normalization Term Source REF
Date of Experiment
Public Release Date
PubMed ID
Publication DOI
Publication Author List
Publication Title
Publication Status
Publication Status Term Source REF
Experiment Description
Protocol Name
Protocol Type
Protocol Description
Protocol Parameters
Protocol Hardware
Protocol Software
Protocol Contact
Protocol Term Source REF
SRADF File
Term Source Name
Term Source File
Term Source Version

----------------------------------------------------
Validation policy notes for .rpla-idf files:

Number of columns must match up where appropriate.
Factor names cannot be identical.

There must be at least one antibody and antibody names cannot be identical

There must be at least one sradf file.
.sradf files cannot be of zero size.
Quotes around sradf filepath are optional.
All sradf files references must be found. The parser can accommodate both relative and absolute paths.
TODO: Test window paths.
Spaces, but not tabs, are allowed in sradf file path

For better readabality, new lines are allowed after

Experimental Factor Term Source
Antibody Comment
Person Roles Term Source REF
Quality Control Term Source REF
Replicate Term Source REF
Normalization Term Source REF
Public Release Date
Publication Status Term Source REF
Experiment Description
Protocol Term Source REF
SRADF File
----------------------------------------------------

==================


The .sradf file

The .sradf file can refer to more than one array. The .sradf file is in three basic parts. 
These parts will be referred to as a samples section, an array locations section, and lastly, an array data section.

Samples section
The samples section is a subset extracted from MAGE-TAB and serves to enumerate BioSamples and possibly their BioSource provenance. 
It is required that the sample name referenced in the array location section be present in this section. 
It is also required that every sample name in a single .sradf file be unique, so multiple arrays using the same sample names for different samples will require multiple .sradf files.

Array Locations section

In this section, samples are associated with an array, array location and dilution of the sample. 
Multiple arrays can be present in this section. For example, the same sample from the samples section may be split among multiple arrays.

Array Data section

This section serves to map an array with the particular antibody used for hybridization, protocols used in the array creation, hybridization, scanning, quantitation, normalization, and resultant files. 
"Antibody Name" must refer to an antibody in the .rpla-idf. 
Protocols need to reference protocols listed in the .rpla-idf. 
For purposes of clarity, protocols that have to do with array creation, hybridization, image acquisition, and derived array data are explicitly named. 
They could all potentially refer to the same protocol in the .rpla-idf.

There *must* be at least one image file per distinct array within the data set. 
There can be multiple image files present, each with an associated protocol. 
Having imaged a hybridized array is a logical stopping place where the data set can be submitted to a repository and later reviewed.

At a later time, the user can submit measured array data files or derived array data files and associate them with an existing array and source data files through the web interface.

Adding measured and derived array data files through the web interface will require entering the mandatory protocol and its various fields. 
Potentially, a protocol could be copied and so only modified fields edited. 
This process would require browsing existing protocols and since protocol names in the .rpla-idf ( and MAGE-TAB .idf) need only be unique within the data set, it would make the most sense to be able to browse protocols and see in what experiment(s) they were used.


Columns in .sradf

Columns are listed below for the reader but the formal grammar serves to describe the possible column structure with rigor.



Source Name (and associated information such as Characteristics, Provider, MaterialType, Description,...)
Protocol REF (and associated information; points to protocols enumerated in the .idf file)
Sample Name (and associated information such as Characteristics, MaterialType, Description,...)
Reporter Group
Factor Value
//samples data here
--end of Samples section delimiter--
Array Name
BlockColumn
BlockRow
Column
Row
Sample Name
Reporter Group
Dilution Value
Dilution Unit
Dilution Unit Term Source REF
Reporter Group
//array locations data here
---end of array Locations section delimiter---
ArrayCreationProtocol REF
Array Name
ArrayHybridizationProtocol REF
Antibody Name (antibody used on array -> Antibody Name in .rpla-idf)
ImageAcquisitionProtocol REF
Image File
MeasuredArrayDataProtocol REF
Array Data File
DerivedArrayDataProtocol REF
Derived Array Data File
Factor Value
//array data data here
---end of array data section delimiter---

--------------------------------------------

Formal Grammar for .sradf file format

The JavaCC grammars for each section can be found the *.jj files. 

[] means optional
* means 0 or more
+ means at least 1

The MAGE-TAB spec. does not currently have a formal grammar.

---------------------------------------
Validation policy notes for sradf files:

Any *REF must resolve according to the  .rpla-idf file
Any sample name in the array locations section must be found in the samples section, and not necessarily the last Sample in a row.
There muct be uniqueness in each row for the following four fields (Array Name,	BlockColumn,	BlockRow,	Column,	Row )

Any array in the array data section must refer to an array in the array locations section

Tabs in quotes in the sradf file are not supported. TODO: invalidate files with such.
There must be the correct number of columns in each section.

* Data Matrix files are not yet supported in the grammar.

==============


==========================


added







/caarray-common.jar/src/main/java/gov/nih/nci/caarray/domain/project/Experiment.java 
(needed to add associations to RPLA domain classes)
----------------------------------------------------------------------------------
/caarray-common.jar/src/main/java/gov/nih/nci/caarray/domain/project/AssayType.java ( added RPLA assay type) 
----------------------------------------------------------------------------------
/caarray.war/src/main/java/gov/nih/nci/caarray/web/action/project/ProjectFilesAction.java





/caarray-common.jar/src/main/java/gov/nih/nci/caarray/dao/CaArrayDaoFactory.java
----------------------------------------------------------------------------------
/caarray-common.jar/src/main/java/gov/nih/nci/caarray/dao/CaArrayDaoFactoryImpl.jav


/caarray.war/src/main/webapp/WEB-INF/pages/project/tabAnnotations.jsp



ADDED: /caarray.war/src/main/java/gov/nih/nci/caarray/web/action/project/ProjectRplaHybridizationsAction.java



added:
/caarray-ejb.jar/src/main/java/gov/nih/nci/caarray/application/file/RplaTabImporter.java

--------------------------------------------------------------------------------------
added * under
/caarray-ejb.jar/src/main/java/gov/nih/nci/caarray/application/translation/rplatab

--------------------------------------------------------------------------------------
added * under
/caarray-ejb.jar/src/main/java/gov/nih/nci/caarray/application/antibody


added * under
/caarray.war/src/main/java/gov/nih/nci/carpla/web/action



--------------------------------------------------------------------------------------
added* under
/caarray.war/src/main/webapp/WEB-INF/pages/antibody

###################################################################################


--------------------------------------------------------------------------------------

added* under
/caarray-common.jar/src/main/java/gov/nih/nci/carpla/domain/*


--------------------------------------------------------------------------------------
added
/caarray-common.jar/src/main/java/gov/nih/nci/caarray/dao/AntibodyDao.java
/caarray-common.jar/src/main/java/gov/nih/nci/caarray/dao/AntibodyDaoImpl.java



/caarray-common.jar/src/main/resources/hibernate.cfg.xml

-------------------------------------------------------------------------------
/caarray.war/src/main/java/struts.xml
----------------------------------------------------------------------------------





/caarray.ear/src/main/resources/application.xml




----------------------------------------------------------------------------------
/caarray-ejb.jar/src/main/java/gov/nih/nci/caarray/application/fileaccess/FileExtension.java
----------------------------------------------------------------------------------


/caarray-ejb.jar/src/main/java/gov/nih/nci/caarray/application/file/
lots of files...will need to refactor abstract/subclasses...

AbstractProjectFilesJob.java
in validateAnnotation, kluge:
	check if it contains rplaidf file and call getRplaTabImporter().validateFiles(fileSet)
	instead of getMageTabImporter().validateFiles(fileSet);

----------------------------------------------------------------------------------
/caarray.war/src/main/java/gov/nih/nci/caarray/web/action/CaArrayActionHelper.java
added method to resolve:   AntibodyService getAntibodyService ()


###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
###################################################################################
TO FIND/DO:
###################################################################################
###################################################################################

1) Creating experiment page needs to change:


want to fade out/disable/skirt required fields: Provider, Array Designs, Organism 
when RPLA is chosen in tabOverview.jsp




2) Overall Experiment Characteristics page needs to change. 



3) Permissions by sample not reasonable here. ( hundreds of samples).
Setting visibility for experiment probably sufficient.


4) LOG.info("case where characteristic is measurement (???) is not handled...");




----------------------------------------------------------------------------------

----------------------------------------------------------------------------------

----------------------------------------------------------------------------------




changed a few classes in caarray.domain: removed "final" so I could extend them and implement 
some interfaces I use in my parsing.
includes Characteristic and some others...list here




=============


currently only supporting import of RplaTabDocumentSets with exactly one 
rplaidf and exactly one sradf.


--why are elements added implicitly? (happens in SdrfTranslator )
	addImplicitExtracts();
			 addImplicitSamples();
			
			//any reason to add implicit sources, or implicit anything?
			// addImplicitSources();
---

currently some classes are borrowed from mage-tab domain...convenience

maybe decide on best way to proceed...will intermediary mage-tab model change?


need to add Antibody Validation section to rplaidf? 
finish terms and term validation wrt Characteristics


found this syntax in MAGE-TAB paper:

Characteristics[CellLine] OI:CTO

Check out: 
http://obo.sourceforge.net/cgi-bin/detail.cgi?cell

Look at Reporter items in mage-tab and tab2mage.


Like the assumption that if not defined comes from MO?

it should be easier for researchers to understand and create *tab...


**line number reporting! need to fix


ice interface down the line?

vis: next to image, show microvigene quantified visually..

graphical display of sradf

webstart tool to help generate/validate rplatab

need to eventually parse microvigene as data matrix...



old applet:
works on linuxm windows, mac


======================================


 A sample cannot have multiple Sources
 Any spot on the array is considered a Sample.
 A sample may have a null source.
 Only one sample can be in an array location.
 Any principal ( node or edge) should have the same attributes in the same column in a section.
 Each row shoudl correspond to one complete path.
 Only "RPLA" is supported as Technology Type for Assay Type
 Any final sample should have identical Factor Values
 In Samples section, exactly one row per sample.
 (SUbsequent protocols do not imply sequential application).
 
 Need to allow for # for comments in rplaidf and sradf
 MAke sure -> is handled correctly everywhere
 
Any Sample REF must be listed in Sampels section.
All files *must* be found.
An Image File Array Data file, Derived Array Data file may be empty.

Data sheet files for Antibody to be supported in future.

==---
notes about parser design...

regexp to capture most rules about headers, especially simple :
Principal vs. Attribute...simple rule for assigning attributes to principals
good for specifying required columns and orders
makes for top-down design
possible use as filter/classifier of valid datasets
easier to prototype, rather than deal with rules iteratively
could also be simple rules
node()
( node() | (edge())+ node())*




-----------
Display

Show expfactors, values, and characteristics for an experiment


----

simple parser doesn't need to deal with assocations between principals...why bother?
It depends on final model how these things get organized..some of these associations may not
even be supported....
will just make associations only to have to parse them later....

translator can just look at pairs of principals
e.g. Source-Sample
Source-Protocol
Sample-Sample
Protocol-Sample and so on...




--------

subversion notes:
use major tags as starting points




Need Reporter Group???

column counts required? Flag extra tabs?







