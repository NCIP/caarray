<%@ jet package="gov.nih.nci.codegen.core.template.jet" 
        class="BeanHBJunit"
        skeleton="BeanSkel.skeleton" %>
<%
Classifier klass = (Classifier)context.get("modelElement");
String basePkg = (String)context.get("basePackage");
String isAbstract = new String();
int endPackage = getQualifiedName(klass, basePkg).lastIndexOf(".");
String tempPackage = getQualifiedName(klass, basePkg).substring(0,endPackage);
String className = getQualifiedName(klass, basePkg).substring(endPackage);
String finalPackageClass = tempPackage + ".ws" + className;
		
if (klass.isAbstract()) {
  isAbstract="abstract";
} 
if (!isAbstract.equals("abstract")){ %>

package <%=UML13Utils.getNamespaceName(UML13Utils.getPackage(UML13Utils.getModel(klass), basePkg), klass)%>.impl.test;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.apache.log4j.Logger;
import junit.framework.TestCase;
import gov.nih.nci.common.util.HibernateUtil;

/**
 * <!-- LICENSE_TEXT_START -->
 * <!-- LICENSE_TEXT_END -->
 */
 
public class <%=klass.getName()%>Test extends TestCase{

    private static Logger _logger = Logger.getLogger(<%=klass.getName()%>Test.class);
    
	public static final Class CLASS = <%=klass.getName()%>Test.class;

    public <%=klass.getName()%>Test(String testName) {
        super(testName);
    }

	public static void main(String[] args) {
		try {
			junit.textui.TestRunner.main(new String[] { CLASS.getName() });
		} catch (Exception ex) {
			System.out.println("Error: " + ex.getMessage());
			ex.printStackTrace();
		}
	}

	public static junit.framework.Test suite() {
		junit.framework.TestSuite suite = new junit.framework.TestSuite();

		//suite.addTest(new <%=klass.getName()%>Test("testPopulate"));
		suite.addTest(new <%=klass.getName()%>Test("testRetrieve"));
		
		return suite;
	} 

	public void testPopulate(){
		try{
		        <%=UML13Utils.getNamespaceName(UML13Utils.getPackage(UML13Utils.getModel(klass), basePkg), klass)%>.ws.<%=klass.getName()%> <%=uncapFirst(klass.getName())%> = new <%=UML13Utils.getNamespaceName(UML13Utils.getPackage(UML13Utils.getModel(klass), basePkg), klass)%>.ws.<%=klass.getName()%>() ;
			save(<%=uncapFirst(klass.getName())%>);
		}catch(Exception ex){
		    ex.printStackTrace();
		    fail("Error retrieving <%=klass.getName()%>. Got " + ex.getClass().getName() + ": " + ex.getMessage());
		
		}
	}
	
	public void testRetrieve(){
		try{
			Session sess = gov.nih.nci.common.util.HibernateUtil.currentSession();
			Transaction tx = sess.beginTransaction();
			
			sess.createCriteria(<%=finalPackageClass%>.class).list();
			tx.commit();
			gov.nih.nci.common.util.HibernateUtil.closeSession();
		}catch(Exception ex){
		    ex.printStackTrace();
		    fail("Error retrieving <%=klass.getName()%>. Got " + ex.getClass().getName() + ": " + ex.getMessage());
		}
	}

    public void save(Object obj) {

        Transaction tx = null;
        Session sess = null;
        boolean success = true;

	<% String idAttTypeName = (getQualifiedName(getIdAtt((UmlClass)klass).getType(), basePkg).startsWith("."))?getQualifiedName(getIdAtt((UmlClass)klass).getType(), basePkg).substring(1):getQualifiedName(getIdAtt((UmlClass)klass).getType(), basePkg); %>	
	<% // Convert Java primitive types to wrapper types. %>	
	<% if (idAttTypeName.equals("byte")) idAttTypeName = "java.lang.Byte"; %>	
	<% if (idAttTypeName.equals("short")) idAttTypeName = "java.lang.Short"; %>	
	<% if (idAttTypeName.equals("int")) idAttTypeName = "java.lang.Integer"; %>	
	<% if (idAttTypeName.equals("long")) idAttTypeName = "java.lang.Long"; %>	
	<% if (idAttTypeName.equals("float")) idAttTypeName = "java.lang.Float"; %>	
	<% if (idAttTypeName.equals("double")) idAttTypeName = "java.lang.Double"; %>	
	<% if (idAttTypeName.equals("char")) idAttTypeName = "java.lang.Character"; %>	
	<% if (idAttTypeName.equals("boolean")) idAttTypeName = "java.lang.Boolean"; %>	
	<% String attValue = "new " + idAttTypeName + "(\"1\")"; %>

	((<%=finalPackageClass%>)obj).setId(<%=attValue%>);

        try {
            sess = gov.nih.nci.common.util.HibernateUtil.currentSession();
            tx = sess.beginTransaction();
            sess.saveOrUpdate(obj);
        } catch (Exception ex) {
            ex.printStackTrace();
            success = false;
            try {
                tx.rollback();
            } catch (Exception ex2) {
                throw new RuntimeException("Error rolling back.", ex2);
            }
        } finally {
            try {
                if (success && tx != null) {
                    tx.commit();
                }
                gov.nih.nci.common.util.HibernateUtil.closeSession();
            } catch (Exception ex) {
                throw new RuntimeException("Error cleaning up", ex);
            }
        }
    }
}
   

<% } else { }%>


