<project name="macrodefs">

    <macrodef name="run-junit-tests">
        <attribute name="test.src.dir" />
        <attribute name="xml.output.dir" />
        <attribute name="classpath" default="" />
        <attribute name="instrumented.classes" default="" />
        <attribute name="classpathref.id" default="no.dependencies.path" />
        <attribute name="source.include" default="**/*Test.java" />
        <attribute name="source.exclude" default="**/Abstract*Test.java" />

        <sequential>
            <mkdir dir="@{xml.output.dir}" />
            <junit printsummary="on" failureproperty="junit.failure" fork="true" forkmode="once" maxmemory="256m">
                <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.file}" />
                <sysproperty key="server.hostname" value="${jboss.server.hostname}" />
                <sysproperty key="server.port" value="${jboss.server.port}" />
                <sysproperty key="server.jndi.port" value="${jboss.server.jndi.port}" />
                <sysproperty key="selenium.server.port" value="${selenium.server.port}" />

                <classpath>
                    <pathelement path="@{instrumented.classes}" />
                    <pathelement path="@{classpath}" />
                    <path refid="cobertura.classpath" />
                </classpath>
                <classpath refid="@{classpathref.id}" />
                <formatter type="xml" />
                <batchtest todir="@{xml.output.dir}">
                    <fileset dir="@{test.src.dir}">
                        <include name="@{source.include}" />
                        <exclude name="@{source.exclude}" />
                    </fileset>
                </batchtest>
            </junit>
        </sequential>
    </macrodef>

    <macrodef name="display-properties">
        <attribute name="v" default="NOT SET" />
        <element name="some-tasks" optional="yes" />
        <sequential>
            <echo>database.url=${database.url}</echo>
            <echo>database.user=${database.user}</echo>
            <echo>database.password=${database.password}</echo>
            <some-tasks />
        </sequential>
    </macrodef>

    <macrodef name="run-sql-script" description="By default this will use the database.url, to use drop database &amp; user use the database.system.url property">
        <attribute name="sql.file" />
        <attribute name="sql.delimiter" default=";" />
        <attribute name="sql.delimitertype" default="normal" />
        <attribute name="onerror" default="abort" />
        <attribute name="database.url" default="${database.url}" />
        <attribute name="database.user" default="${database.user}" />
        <attribute name="database.password" default="${database.password}" />
        <sequential>
            <sql driver="${database.driver}" url="@{database.url}" userid="@{database.user}" password="@{database.password}" src="@{sql.file}" onerror="@{onerror}" autocommit="true" delimiter="@{sql.delimiter}" delimitertype="@{sql.delimitertype}" keepformat="true">
                <classpath>
                    <pathelement location="${mysql-connector.jar}" />
                </classpath>
            </sql>
        </sequential>
    </macrodef>

    <!-- EXAMPLE: <remote-ssh remotesshcommand="mv ${jboss.temp.dir}/caarray.ear ${jboss.home}/deploy/" /> -->
    <macrodef name="remote-ssh" description="This is a remote SSH procedure. It will use SSH connection defaults as defined in the environment property file to initiate SSH connections and execure remote unix commands. remoteSshCommand is a mandatory attribute to this macrodef.">
        <attribute name="remoteSshCommand" />
        <attribute name="remoteSshPort" default="${ssh.port}" />
        <attribute name="remoteSshHost" default="${ssh.server.hostname}" />
        <attribute name="remoteSshUser" default="${ssh.server.username}" />
        <attribute name="remoteSshKeyfile" default="${ssh.key.file}" />
        <attribute name="remoteSshSleep" default="5" />
        <sequential>
            <sshexec port="@{remotesshport}" host="@{remotesshhost}" username="@{remoteSshUser}" keyfile="@{remoteSshKeyfile}" trust="true" passphrase="" verbose="true" command="@{remotesshcommand}" />
            <sleep seconds="@{remoteSshSleep}" />
            <echo message="Performed @{remoteSshCommand} command on @{remoteSshHost}:@{remoteSshPort} using SSH..." />
        </sequential>
    </macrodef>

    <!-- EXAMPLE: <remote-scp remoteScpFileToCopy="${caarray.ear}"
  remoteScpToDir="${ssh.server.username}@${ssh.server.hostname}:${jboss.temp.dir}" />
  -->
    <macrodef name="remote-scp" description="This task copies files in a secure manner using SCP.
  remoteScpToDir and remoteScpFileToCopy are required attributes to this macrodef.">
        <attribute name="remoteScpFileToCopy" />
        <attribute name="remoteScpToDir" />
        <attribute name="remoteScpKeyFile" default="${ssh.key.file}" />
        <attribute name="remoteScpPassphrase" default="" />
        <attribute name="remoteScpTrust" default="true" />
        <attribute name="remoteScpVerbose" default="true" />
        <attribute name="remoteScpSleep" default="5" />
        <sequential>
            <scp file="@{remoteScpFileToCopy}" keyfile="@{remoteScpKeyFile}" passphrase="@{remoteScpPassphrase}" trust="@{remoteScpTrust}" verbose="@{remoteScpVerbose}" todir="@{remoteScpToDir}" />
            <sleep seconds="@{remoteScpSleep}" />
            <echo message="Copied @{remoteScpFileToCopy} to @{remoteScpToDir} using SCP..." />
        </sequential>
    </macrodef>

</project>
